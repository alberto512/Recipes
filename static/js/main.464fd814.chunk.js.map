{"version":3,"sources":["components/NavBar/NavBar.jsx","components/NavBar/NavBarGroup.jsx","pages/Home.jsx","components/SearchBar/SearchBar.jsx","components/RecipeCard/RecipeCard.jsx","pages/Recipes.jsx","components/Form/Form.jsx","pages/Create.jsx","App.js","serviceWorker.js","index.js"],"names":["NavBar","React","forwardRef","props","ref","useState","display","setDisplay","useImperativeHandle","openNavBar","open","closeNavBar","close","ReactDOM","createPortal","className","onClick","children","document","getElementById","NavBarGroup","navBarRef","useRef","Fragment","size","current","icon","exact","activeClassName","to","Home","SearchBar","method","action","type","placeholder","required","id","RecipeCard","state","$","hover","this","animate","marginTop","marginBottom","CardDeck","Card","Img","variant","src","Body","Title","Text","Button","Component","Recipes","FormComponent","bsCustomFileInput","init","Header","Form","Row","Group","as","Col","controlId","Label","Control","rows","File","label","custom","Crate","App","path","component","Create","Boolean","window","location","hostname","match","render","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.464fd814.chunk.js","sourcesContent":["import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nconst NavBar = React.forwardRef((props, ref) => {\r\n  const [display, setDisplay] = React.useState(false);\r\n\r\n  React.useImperativeHandle(ref, () => {\r\n    return {\r\n      openNavBar: () => open(),\r\n      closeNavBar: () => close(),\r\n    };\r\n  });\r\n\r\n  const open = () => {\r\n    setDisplay(true);\r\n  };\r\n\r\n  const close = () => {\r\n    setDisplay(false);\r\n  };\r\n\r\n  if (display) {\r\n    return ReactDOM.createPortal(\r\n      <div className={\"modal-wrapper\"}>\r\n        <div onClick={close} className={\"modal-backdrop\"} />\r\n        <div className={\"modal-box\"}>{props.children}</div>\r\n      </div>,\r\n      document.getElementById(\"root\")\r\n    );\r\n  }\r\n\r\n  return null;\r\n});\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport NavBar from \"./NavBar\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { MDBIcon } from \"mdbreact\";\r\nimport \"./NavBar.css\";\r\n\r\nfunction NavBarGroup() {\r\n  const navBarRef = React.useRef();\r\n\r\n  const openNavBar = () => {\r\n    navBarRef.current.openNavBar();\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <MDBIcon size=\"2x\" className=\"icon\" onClick={openNavBar} icon=\"bars\" />\r\n\r\n      <NavBar ref={navBarRef}>\r\n        <div className=\"div-nav-bar\">\r\n          <div className=\"div-nav-elements\">\r\n            <ul>\r\n              <li>\r\n                <NavLink exact activeClassName=\"current\" to=\"/RecipesWeb/\">\r\n                  Home\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink exact activeClassName=\"current\" to=\"/recipes\">\r\n                  Recipes\r\n                </NavLink>\r\n              </li>\r\n              <li>\r\n                <NavLink exact activeClassName=\"current\" to=\"/create\">\r\n                  Create\r\n                </NavLink>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </NavBar>\r\n    </React.Fragment>\r\n  );\r\n}\r\n\r\nexport default NavBarGroup;\r\n","import React from \"react\";\r\nimport NavBarGroup from \"../components/NavBar/NavBarGroup\";\r\nimport \"./Home.css\";\r\n\r\nconst Home = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <NavBarGroup />\r\n      <div className=\"home\">\r\n        <div className=\"title\">\r\n          <h1 className=\"recipes\">Recipes</h1>\r\n        </div>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport \"./SearchBar.css\";\r\n\r\nconst SearchBar = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <div className=\"container\">\r\n        <form method=\"get\" action=\"\">\r\n          <div className=\"tb\">\r\n            <div className=\"td\">\r\n              <input\r\n                className=\"input-bar\"\r\n                type=\"text\"\r\n                placeholder=\"Search\"\r\n                required\r\n              />\r\n            </div>\r\n            <div className=\"td\" id=\"cover\">\r\n              <button className=\"button-bar\" type=\"submit\">\r\n                <div className=\"circle\"></div>\r\n                <span className=\"button-span\"></span>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n","import React, { Component } from \"react\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { CardDeck } from \"react-bootstrap\";\r\nimport $ from \"jquery\";\r\nimport \"./RecipeCard.css\";\r\n\r\nclass RecipeCard extends Component {\r\n  state = {};\r\n\r\n  componentDidMount() {\r\n    $(\".recipe\").hover(\r\n      function () {\r\n        $(this).animate(\r\n          {\r\n            marginTop: \"-=1%\",\r\n            marginBottom: \"1%\",\r\n          },\r\n          200\r\n        );\r\n      },\r\n\r\n      function () {\r\n        $(this).animate(\r\n          {\r\n            marginTop: \"0%\",\r\n            marginBottom: \"0%\",\r\n          },\r\n          200\r\n        );\r\n      }\r\n    );\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <CardDeck className=\"deck\">\r\n          <Card className=\"recipe\">\r\n            <Card.Img\r\n              variant=\"top\"\r\n              src=\"https://sevilla.abc.es/gurme/wp-content/uploads/sites/24/2012/01/comida-rapida-casera.jpg\"\r\n            />\r\n            <Card.Body>\r\n              <Card.Title>Best Burger</Card.Title>\r\n              <Card.Text>\r\n                1.Cut the meat before adding to the table...\r\n              </Card.Text>\r\n              <Button variant=\"primary\">View More</Button>\r\n            </Card.Body>\r\n          </Card>\r\n\r\n          <Card className=\"recipe\">\r\n            <Card.Img\r\n              variant=\"top\"\r\n              src=\"https://sevilla.abc.es/gurme/wp-content/uploads/sites/24/2012/01/comida-rapida-casera.jpg\"\r\n            />\r\n            <Card.Body>\r\n              <Card.Title>Best Burger 2</Card.Title>\r\n              <Card.Text>\r\n                1.Cut the meat before adding to the table...\r\n              </Card.Text>\r\n              <Button variant=\"primary\">View More</Button>\r\n            </Card.Body>\r\n          </Card>\r\n\r\n          <Card className=\"recipe\">\r\n            <Card.Img\r\n              variant=\"top\"\r\n              src=\"https://sevilla.abc.es/gurme/wp-content/uploads/sites/24/2012/01/comida-rapida-casera.jpg\"\r\n            />\r\n            <Card.Body>\r\n              <Card.Title>Best Burger 3</Card.Title>\r\n              <Card.Text>\r\n                1.Cut the meat before adding to the table...\r\n              </Card.Text>\r\n              <Button variant=\"primary\">View More</Button>\r\n            </Card.Body>\r\n          </Card>\r\n        </CardDeck>\r\n\r\n        <CardDeck className=\"deck\">\r\n          <Card className=\"recipe\">\r\n            <Card.Img\r\n              variant=\"top\"\r\n              src=\"https://sevilla.abc.es/gurme/wp-content/uploads/sites/24/2012/01/comida-rapida-casera.jpg\"\r\n            />\r\n            <Card.Body>\r\n              <Card.Title>Best Burger 4</Card.Title>\r\n              <Card.Text>\r\n                1.Cut the meat before adding to the table...\r\n              </Card.Text>\r\n              <Button variant=\"primary\">View More</Button>\r\n            </Card.Body>\r\n          </Card>\r\n\r\n          <Card className=\"recipe\">\r\n            <Card.Img\r\n              variant=\"top\"\r\n              src=\"https://sevilla.abc.es/gurme/wp-content/uploads/sites/24/2012/01/comida-rapida-casera.jpg\"\r\n            />\r\n            <Card.Body>\r\n              <Card.Title>Best Burger 5</Card.Title>\r\n              <Card.Text>\r\n                1.Cut the meat before adding to the table...\r\n              </Card.Text>\r\n              <Button variant=\"primary\">View More</Button>\r\n            </Card.Body>\r\n          </Card>\r\n\r\n          <Card className=\"recipe\">\r\n            <Card.Img\r\n              variant=\"top\"\r\n              src=\"https://sevilla.abc.es/gurme/wp-content/uploads/sites/24/2012/01/comida-rapida-casera.jpg\"\r\n            />\r\n            <Card.Body>\r\n              <Card.Title>Best Burger 6</Card.Title>\r\n              <Card.Text>\r\n                1.Cut the meat before adding to the table...\r\n              </Card.Text>\r\n              <Button variant=\"primary\">View More</Button>\r\n            </Card.Body>\r\n          </Card>\r\n        </CardDeck>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RecipeCard;\r\n","import React from \"react\";\r\nimport NavBarGroup from \"../components/NavBar/NavBarGroup\";\r\nimport SearchBar from \"../components/SearchBar/SearchBar\";\r\nimport RecipeCard from \"../components/RecipeCard/RecipeCard\";\r\nimport \"./Recipes.css\";\r\n\r\nconst Recipes = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <NavBarGroup />\r\n      <SearchBar />\r\n      <div className=\"recipe-card\">\r\n        <RecipeCard />\r\n      </div>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Recipes;\r\n","import React, { Component } from \"react\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Col from \"react-bootstrap/Col\";\r\nimport Card from \"react-bootstrap/Card\";\r\nimport bsCustomFileInput from \"bs-custom-file-input\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport \"./Form.css\";\r\n\r\nclass FormComponent extends Component {\r\n  state = {};\r\n\r\n  componentDidMount() {\r\n    (function () {\r\n      bsCustomFileInput.init();\r\n    })();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Card className=\"custom-card\">\r\n        <Card.Header>Create new recipe</Card.Header>\r\n        <Card.Body>\r\n          <Form>\r\n            <Form.Row>\r\n              <Form.Group as={Col} controlId=\"form-grid-name\">\r\n                <Form.Label className=\"label\">Name</Form.Label>\r\n                <Form.Control placeholder=\"Recipe's name\" />\r\n              </Form.Group>\r\n\r\n              <Form.Group as={Col} controlId=\"form-grid-category\">\r\n                <Form.Label className=\"label\">Category</Form.Label>\r\n                <Form.Control as=\"select\">\r\n                  <option>Select category</option>\r\n                  <option>...</option>\r\n                </Form.Control>\r\n              </Form.Group>\r\n            </Form.Row>\r\n\r\n            <Form.Group controlId=\"form-grid-steps\">\r\n              <Form.Label className=\"label\">List the steps</Form.Label>\r\n              <Form.Control as=\"textarea\" rows=\"5\" placeholder=\"1.\" />\r\n            </Form.Group>\r\n\r\n            <Form.Group controlId=\"form-grid-image\">\r\n              <Form.File id=\"image\" label=\"Upload your recipe's image\" custom />\r\n            </Form.Group>\r\n\r\n            <Button variant=\"warning\" type=\"submit\">\r\n              Submit\r\n            </Button>\r\n          </Form>\r\n        </Card.Body>\r\n      </Card>\r\n    );\r\n  }\r\n}\r\n\r\nexport default FormComponent;\r\n","import React from \"react\";\r\nimport NavBarGroup from \"../components/NavBar/NavBarGroup\";\r\nimport FormComponent from \"../components/Form/Form\";\r\n\r\nconst Crate = () => {\r\n  return (\r\n    <React.Fragment>\r\n      <NavBarGroup />\r\n      <FormComponent />\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Crate;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport { Switch, Route } from \"react-router-dom\";\nimport Home from \"./pages/Home\";\nimport Recipes from \"./pages/Recipes\";\nimport Create from \"./pages/Create\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"mdbreact/dist/css/mdb.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Switch>\n        <Route exact path=\"/RecipesWeb/\" component={Home}></Route>\n        <Route exact path=\"/recipes\" component={Recipes}></Route>\n        <Route exact path=\"/create\" component={Create}></Route>\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { BrowserRouter } from \"react-router-dom\";\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}